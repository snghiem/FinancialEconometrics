library("Ecdat")
library("fGarch")
library("evir")
library("evir")
library("evir")
libary("forecast")
library("forecast")
install.packages("forecast")
library("forecast")
data(CRSPday, package="Ecdat")
data(bmw)
summary(bmw)
length(bmw)
summary(bmw)
length(bmw)
summary(bmw)
summary(bmw)
length(bmw)
summary(bmw)
summary(bmw)
summary(bmw)
length(bmw)
plot(bmw)
acf(bmw)
summary(bmw)
length(bmw)
plot(bmw)
acf(bmw)
plot(bmw)
acf(bmw)
plot(bmw)
plot(bmw)
acf(bmw)
Box.test(x=bmw, lag=5, type="Ljung-Box")
fitAR1 = arima(bmw, order = c(1,0,0))
?acf
setwd("D:/sony/FinEcon")
dat = read.csv("datasets/Stock_bond.csv", header=TRUE)
dim(dat)
head(dat)
names(dat)
attach(dat)
par(mfrow=c(1,2))
plot(GM_AC)
plot(F_AC)
# problem 1
n = dim(dat)[1]
GM.return = GM_AC[2:n]/GM_AC[1:(n-1)] -1
F.return = F_AC[2:n]/F_AC[1:(n-1)] -1
par(mfrow=c(1,1))
plot(GM.return, F.return)
# it has a very weak positive correlation
# there are quite a few outliers
# it looks like a black hole.
#problem 2
GM.logreturn = log(GM.return+1)
summary(GM.logreturn)
plot(GM.return, GM.logreturn)
# they are quite highly correlated
cor(GM.return, GM.logreturn)
summary(dat)
setwd("D:/sony/FinEcon")
dat = read.csv("datasets/Stock_bond.csv", header=TRUE)
dim(dat)
head(dat)
names(dat)
attach(dat)
par(mfrow=c(1,2))
plot(GM_AC)
plot(F_AC)
n = dim(dat)[1]
GM.return = GM_AC[2:n]/GM_AC[1:(n-1)] -1
F.return = F_AC[2:n]/F_AC[1:(n-1)] -1
par(mfrow=c(1,1))
plot(GM.return, F.return)
cor(GM.return, GM.logreturn)
GM.logreturn = log(GM.return+1)
summary(GM.logreturn)
plot(GM.return, GM.logreturn)
# they are quite highly correlated
cor(GM.return, GM.logreturn)
#summary(dat)
summary(dat)
GM.logreturn = log(GM.return+1)
summary(GM.logreturn)
plot(GM.return, GM.logreturn)
# they are quite highly correlated
cor(GM.return, GM.logreturn)
summary(dat)
GM.logreturn = log(GM.return+1)
summary(GM.logreturn)
plot(GM.return, GM.logreturn)
cor(GM.return, GM.logreturn)
summary(dat)
niter = 1e5 # number of iterations
below = rep(0, niter) # set up storage
set.seed(2016)
for (i in 1:niter) {
# create log normals for 45 days
r =rnorm(45, mean =.05/253, sd = .23/sqrt(253))
# this is the amount after 45 days
logPrice = log(1e6) +cumsum(r)
# minimum price over next 45 days
minlogP = min(logPrice)
#we only consider MINIMUM log price less than log(950,000)
# only consider the minimums
# for sure it's less than???
below[i] = as.numeric(minlogP <log(950000))
}
mean(below)
