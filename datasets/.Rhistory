library(Copula)
install.packages("Copula")
install.packages("copula")
library(copula)
library(sn)
library(ks)
library(ks)
install.packages(ks)
install.packages("ks")
library(ks)
setwd("D:/Sony/FinEcon/datasets")
dat = read.csv("GasFlowData.csv", header=T)
summary(dat)
dat=dat/10000
n = nrow(dat)
x1=dat$Flow1
x2=dat$Flow2
fit1 = st.mple(matrix(1,n,1), y= x1, dp=c(mean(x1), sd(x1), 0, 10))
?st.mple
fit1
est1 = fit1@dp
est1 = fit1$dp
est1
u1 = pst(x1, dp=est1)
?pst
fit2 = st.mple(matrix(1,n,1), y= x2, dp=c(mean(x2), sd(x2), 0, 10))
est2 = fit2$dp
est2
u2 = pst(x2, dp=est2)
u.hat = cbind(u1,u2)
fhatU=kde(x=U.hat,H=Hscv(x=U.hat))
U.hat = cbind(u1,u2)
fhatU=kde(x=U.hat,H=Hscv(x=U.hat))
plot(fhatU, cont =seq(10,80,10))
?plot
plot(fhatU, contour(seq(10,80,10))
plot(fhatU, contour=seq(10,80,10)
plot(fhatU, contour=seq(10,80,10))
plot(fhatU, cont=seq(10,80,10))
?cor.test
cor.test(u1, u2, method = "kendall")
omega = sin(-0.234435*pi/2)
Ct = fitCopula(copula(tCopula(dim=2)), data=U.hat, method="ml", start=c(omega,10))
Ct = fitCopula(copula=tCopula(dim=2), data=U.hat, method="ml", start=c(omega,10))
Ct
Ct$estimate
Ct@estimate
loglikCopula(param=Ct@estimate, x=U.hat, Copula=tCopula(dim=2))
loglikCopula(param=Ct@estimate, x=U.hat, copula=tCopula(dim=2))
loglikCopula(param=Ct@estimate, x=U.hat, copula=tcopula(dim=2))
loglikCopula(param=Ct@estimate, x=U.hat, copula=tCopula(dim=2))
loglikCopula(param=Ct@estimate,x=U.hat,copula=tCopula(dim=2))
Ct=fitCopula(copula=tCopula(dim=2),data=U.hat,method="ml",start=c(omega,10))
Ct@estimate
loglikCopula(param=Ct@estimate,x=U.hat,copula=tCopula(dim=2))
U.hat = cbind(u1,u2)
Ct = fitCopula(copula=tCopula(dim=2), data=U.hat, method="ml", start=c(omega,10))
Ct@estimate # here I need to use @ instead of $
loglikCopula(param=Ct@estimate, x=U.hat, copula=tCopula(dim=2))
loglikCopula(param=Ct@estimate,x=U.hat,copula=tCopula(dim=2))
source('C:/Users/AYSPS/Downloads/MyR_Chap8.R')
loglikCopula(param=Ct@estimate, copula=tCopula(dim=2))
loglikCopula(param=Ct@estimate, copula=tCopula(dim=2))
?loglikCopula
loglikCopula(param=Ct@estimate, u=U.hat, copula=tCopula(dim=2))
lmax.t = loglikCopula(param=Ct@estimate, u=U.hat, copula=tCopula(dim=2))
loglikCopula(param=Ct@estimate, u=U.hat, copula=tCopula(dim=2))
AIC.t = -2*.Last.value+2*length(Ct@estimate)
AIC.t
Cgauss = fitCopula(copula=normalCopula(dim=2), data=U.hat, method="ml", start=c(omega))
loglikCopula(param=Cgauss@estimate, u=U.hat, copula=normalCopula(dim=2))
AIC.normal = -2*.Last.value+2*length(Cgauss@estimate)
AIC.normal
Cfrank = fitCopula(copula=frankCopula(1,dim=2), data=U.hat, method="ml")
loglikCopula(param=Cfrank@estimate, u=U.hat, copula=frankCopula(dim=2))
AIC.frank = -2*.Last.value+2*length(Cfrank@estimate)
AIC.frank
